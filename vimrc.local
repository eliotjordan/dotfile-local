" Automatically delete the buffer of the file just deleted with NerdTree
let NERDTreeAutoDeleteBuffer = 1

" Make NERDTree Prettier
let NERDTreeMinimalUI = 1
let NERDTreeDirArrows = 1

" NERDTree show hidden files
let NERDTreeShowHidden=1

" Map NERDTree to Ctrl-Space. Disabled, for now. Use Leader+e
" nnoremap <C-@> :NERDTree<CR>
" nnoremap <C-@> :NERDTreeToggle<CR>
" nnoremap <C-Space> :NERDTreeToggle<CR>

" CtrlP Show hidden files
let g:ctrlp_show_hidden = 1

" CtrlP Ignore certain directories
let g:ctrlp_custom_ignore = 'node_modules\|DS_Store\|git\|tmp\|coverage'

" Ignore directories in vimgrep
:set wildignore+=node_modules/**,DS_Store/**,coverage/**,tmp/**,log/**

" Turn off text length column
:set colorcolumn=0

" Set line numbers to grey
highlight LineNr ctermfg=grey

" Turn off automatic spell check
autocmd BufRead,BufNewFile *.md setlocal nospell

nnoremap <Leader>b :call Send_to_Tmux("bundle install\n")<CR>
nnoremap <Leader>m :call Send_to_Tmux("migrate\n")<CR>
nnoremap <Leader>sv :AV<CR>
nnoremap <leader>q :q<CR>
" nnoremap <leader>e :Explore<CR>
nnoremap <leader>e :NERDTreeToggle<CR>
nnoremap <leader>w :w<CR>
nnoremap <leader>at :AT<CR>
nnoremap <leader>gs :Gstatus<CR>
nnoremap <leader>gp :Git push<CR>
nnoremap <leader>to :tabonly<CR>
nnoremap <leader>wq :wq<CR>
nnoremap <leader>gri :Git rebase -i master<CR>
nnoremap <leader>ln :set rnu!<CR>
set clipboard=unnamed
let g:tslime_always_current_session = 1
set statusline=%{fugitive#statusline()}\ %f
let g:markdown_enable_mappings = 0
let test#strategy = "tslime"
let g:test#preserve_screen = 1

nnoremap <Leader>me :MarkdownEditBlock<CR>
vnoremap <Leader>me :MarkdownEditBlock<CR>
nnoremap <Leader>rc :ALEFix<CR>
augroup ft_rb
    au!
    " fix the SLOOOW syntax highlighting
    au FileType ruby setlocal re=1 foldmethod=manual
augroup END
set re=1
let g:ale_linter_aliases = {'vue': ['vue', 'javascript']}
let g:ale_linters = {'vue': ['eslint', 'vls']}
let g:ale_fixers = {
\   'ruby': ['rubocop'],
\   'elixir': ['mix_format'],
\   'javascript': ['eslint'],
\   'vue': ['eslint']
\}
let g:ale_set_highlights = 0

" Pretty Print JSON, HTML, XML
command! PrettyPrintJSON %!python -m json.tool
command! PrettyPrintHTML !tidy -mi -html -wrap 0 %
command! PrettyPrintXML !tidy -mi -xml -wrap 0 %
